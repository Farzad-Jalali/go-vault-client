language: go
go:
- 1.11.x
cache:
  directories:
  - "$HOME/docker"
env:
  global:
  - AWS_REGION=eu-west-1
  - AWS_TEST_ROLE_ARN=arn:aws:iam::288840537196:role/go-vault-client-test-role
  - SECSCAN_IMAGE=288840537196.dkr.ecr.eu-west-1.amazonaws.com/tech.form3/secscan-go:latest
  - secure: pSuLiq65Oc4D6/VxYp/FmmZKzHGlmgX0Gae73XMhT0J9jPmcI7JR957O9f524hMf5xlmW/x9zkhqY7gz4jyeY+mjLm38ltOrtMqmlNxLImyecAypHEfnVHr7j8+BJZE9s+ctoAhJEjo33DYZB9yxFOrKR0jWVpJTq0ATGg/PBIL5KT4uD2mYTMF5OR2Kxkt3D9tYrbDFV4hBwEVKUK7G40s2GpXZKsFgzubXJF78zI4sBulo1I6+o8Egj9BXI8Fa1iI5k5B+3gf34ni00BYoyjQ5JHWs83m4q3Nz1bLq2E6hW9ijo252bSQgGCKY7nxw8swUsHcCaMZHhC/qvUrmVal/eqZ/UTEoXOyhd+GvmmA2CUWztvR0LW2Wc7nnNr52wDR2o1K24VLlvFomiYwVLfO2u1tksXLSrMdl6ZyfX0JwXsaMwcHiXClFOD0W4IwMDsep7VF6DBjML173LYWTYW0BfGdAUNLHKrLsMYjTKLk01xt5Kn0FF47RPPnOZX41gMk9Qv106vElDHT7TxGUvHjG+UrRQftvlBSxpOxoGlKVZE+fG+ca3/hVxPd7zwXJljYs7ddSjrFCHvsziJgGIk//j6JTPDn8hC5B2uC6zwYHzZHLtxSn1EiCd6p76M4r5993wrpsXDIZujpnwFjE3Om5Mtd1leQp6JyN3aCsRj4=
  - secure: kk4TK6fl/GiK8r9aODN9j7SvsQH/pUHp6XyASQcyw+fZkd3pTb7JHnu+vnaf2MM8s81KWWIvBGduvVVQKjtOc94F+7qJ8mavRd1D51mYimyvk2Kn6IogY2Tg05J2Iel9E3csRsYgWzPVUApsOR48TSD9WvKzI4no2h6Tft8rkqg/rYd0E+ZyBZ4Zke98Gc5tosBO1prOqirMkUQnPeG/Ty4F3iiKZ/yWBzrFXTLTBb6p85qN9ATYk4c/SneORh39SqmXFVOQjnMbunjK+u1iAK+1tT/bGh4cgTAeMecfs8o6PDnQRXp3FhinEDpwc7erLLOkkUdbX/hnBf9FE3/BfpyGCx8rJ4k1ixXsxIHnfChrotYzTh3NZhoLbj+K6AqQA89W2RZtP6B43U9cqWafFfBt1w4Vu/9l2JC8zEANEi8B5e6xOjEbUl03SqCH7AyyYB1aMH+e7Wah/HOaSNGa1rgnVFI4DfgxJYoCgV9EPUg0bghbxn28yIEBZSf76JXkmBNAbNxtkHuzn9eVg3wyTThUbk1BW9CoRcxajkNV/WBzB6MGcogHTi7GK1fLNVUh+Y0Lqe5hkwIY9BdOaih0TETltjuQ9/tOmphTXxRDZ+VUJw+X3v59Gg/1CAtc41uwLcC6/OhOb3XmbyefDUU+x2ZrP02NZ6MtYGqui546Skk=
  - secure: R9VDNh1ab8kC2NamkdzcRxalPZpOUIopbquhzxd6ezdzSTSXp3GsTbD/mumYMvh9kuqmBqRbQl2XO2JSjR7To5OH1acF6ZHplgER7a7ALW2PDVY1qswaB7nrLRVBr1/tYnudozSkePwC//+K7uO92KvQEM41ii7aqFeotYf6KTOOcb3fd9BieuaXNyiUv9CDCCKC/51kYJ3gz0WjlyCh8Gmg3be5fhsQr0izcJITXRAzoBkVKWbUSk/jIz7wE45Qu8fIzueYdEm5Cq0SDxh+xI2FDzDgo13glbyEU9NIz7zbniJhs9pHWRIbgxQWoOhOe4tFMsK0DTJlHXPJbfgcAKWODWTqXS4hXItXIT4bL3TpOtyJMS0Ewx76YGYfx5mTSYuP+XaGvHmd3DFehjYUeOtYSS/8uykTxQZ3tGPL0yi71iFM7sm8tIPJHxYVxbZUizOn+EX2NjebOa1+vSPnX6QnduPPvYgbTui1a5fX2IQFgpAdq8b82gwmgqKTXgzkQqtEN8L6vKnoF0NpnCf7gQelPiIzm+j6M+ZWqJ1vn4mZb7a5DXp+Nl61L3JPiHYCPnCqOYcw7OGz6QKtaSn8MZJgkoR0Xv6M9l5A+7coDExNWFZQCsn1M8bHa572rIe/+EtIvrMJm31VscVDNNEh8SumrmT3ynU6ha4keywR/fY=
  - secure: AjxbOfICuJceL7UUvnc4Bx6YVAe0va0pHkfDnkAFdrX3OJjYdAlv6vj68k2cLBHUbujofZ+wKpjGy6iI/16jK9JH0wqD6GXRBHJFnSOEBfbyygdZFQ3+knusQYsWisqrP6G4QPUasAVhNe/ma4xXeXyvIQAZ9x8QkAWybHOEhCWD2kjx1CoUIGYSu8YJie56Su+8xB1783kUGl4b2mQDyKy3k7cbKbdwdjfUCSdw6PNIBc735UE5urlArbTFH+zwoWyZNJf3BwC5gC3kYbiXio5Cw2CoypLpZO5uqeHKaVGjJenMgA3srBBKwNLljc0YW/9FXz9b0dBE/uPPQtBRjxRceff0boWlc6lZT7MYXXG2k/HwFw8SUzGN5PJ3HeWJDEJFAZlUARG36uOdpY7XjJUxccmypbehC6bPlCQeaFyvQQpZpw0l8qsSJ6xc1fBIZtBvnoelgRJ/fQfizhDzWcrCmkzQYvYS0sAIKFHEXUOFIScmPnZZc0lF8+d+IIVHXz+2bwBVqma443XizjeBoQkim6Pmj7ZEIaSEzbyuLrhUPW4KplAWWsGC77lmTPDhySm+RhHe0PKSsoUm5zEnW93RyiKrCWlgikynAq3srVV53UVPen7t1VNbjBQfwVYk+4um873fcEYhgOrk8sggyVjUVKfFEajzExKzzI8rkiw=
  - secure: PbJUDa/FdtZ3IBE3AxoTTsKZC/5YALILwuQ61ILKsnhY3bKGnQpWvo+HxWz0N9k3TIiLMLNHlxCfL9iU3vtnI8maNniIAlH8bHqcj+SL405VvltlVu2FbDJGvpHEzOYT2kozHNd+obMO6scpsK3VzQKj5/CpoHN2YkVSlSOay1i9HgoF+ZI0dbrZDWMnP1pkHHy8j4GqzqxCqy8wv2s/BzjiYWyOEODj37k8Pja88ozEf81bZOPhTgHsf3/0A8zzBWq2eb0NL3p1d2+WSAJ+NRDphZXRajKz30gGjSwYbWdphdBQGEcT4RD5SL1mrre/hyVmD1U2LYCjBZ7n1bDJkWp4NVx4ZzkVck5468expqnOBaD0zu3LAO/S9l6nC46nEe34TBQKohqAWbEDD6GuB55c1xH+JTGH8AVKpa+JsIAnPpd2izh1/egmJ8fqvv7ONlWk3mERLn47xy5IJt9SA7kO01GUaXkPBUjqWk+qtmS5vKdkZpR4sB9/6GE94VAtn3RROlqAGFukXGVHGWIcDAXOBOIb3y/Gk0g2wuqs/E2d2TjwVACkEnEWPvV5C9A6CJKEIyE9WS9LFIDjHoaojwBJiYlUfZmA+XRmGWtU3AxLaxwZ17B62Yix9QnSy1RSZy778ReaBGyElDNNVxdPcV1hxNjTN1ssfDe47f7lzwE=
jobs:
  include:
  - stage: test
    name: Run Go tests
    install:
    - pip install --user awscli
    - go get golang.org/x/tools/cmd/goimports
    script:
    - make
  - stage: test
    name: Run Security Scans
    before_cache:
    - 'mkdir -p $HOME/docker && docker images -a --filter=''dangling=false'' --format
      ''{{.Repository}}:{{.Tag}} {{.ID}}'' | xargs -n 2 -t sh -c ''test -e $HOME/docker/$1.tar.gz
      || docker save $0 | gzip -2 > $HOME/docker/$1.tar.gz''

'
    before_install:
    - if [[ -d $HOME/docker ]]; then ls $HOME/docker/*.tar.gz | xargs -I {file} sh
      -c "zcat {file} | docker load"; fi
    install:
    - sudo pip install awscli
    script:
    - eval $(aws ecr get-login --region eu-west-1 --no-include-email)
    - docker run --rm -v $(pwd):/code -e TRAVIS -e SNYK_TOKEN -e REPO=$TRAVIS_REPO_SLUG
      $SECSCAN_IMAGE
  - stage: publish
    name: Publish
    install:
    - sudo pip install awscli
    script:
    - make release
    - make publish
    - 'aws sns publish --region "us-east-1" --topic-arn "arn:aws:sns:us-east-1:288840537196:build_completed"
      --message "{\"branch\": \"$([[ "$TRAVIS_PULL_REQUEST" != "false" ]] && echo
      "PULL-REQUEST" || echo $TRAVIS_BRANCH)\", \"service_name\": \"$TRAVIS_REPO_SLUG\",
      \"version\": \"$TRAVIS_BUILD_NUMBER\", \"git_sha\": \"$TRAVIS_COMMIT\" }"

'
